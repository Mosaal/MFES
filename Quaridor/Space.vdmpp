class Space
	instance variables
		public static UP: int := 1;
		public static DOWN: int := 2;
		public static LEFT: int := 3;
		public static RIGHT: int := 4;
	
		private row: int;
		private col: int;
		private value: int;
		private corner: bool := false;
		private paths: seq of bool := [ false, false, false, false ];
		
	operations
		-- Constructor
		public Space: int * int * int ==> Space
		Space(v, r, c) == (
			row := r;
			col := c;
			value := v;
			
			if r = 1 then paths(UP) := true;
			if r = 9 then paths(DOWN) := true;
			if c = 1 then paths(LEFT) := true;
			if c = 9 then paths(RIGHT) := true;
			if r = 9 or c = 9 then corner := true;
			
			return self
		)
		pre v in set { 0, 1, 2 }
		and r in set { 1, ..., 9 }
		and c in set { 1, ..., 9 };
		
		-- Getters
		public getRow: () ==> int
		getRow() == return row
		post RESULT = row;
		
		public getCol: () ==> int
		getCol() == return col
		post RESULT = col;
		
		public getValue: () ==> int
		getValue() == return value
		post RESULT = value;
		
		public getCorner: () ==> bool
		getCorner() == return corner
		post RESULT = corner;
		
		public getPathUp: () ==> bool
		getPathUp() == return paths(UP)
		post RESULT = paths(UP);
		
		public getPathDown: () ==> bool
		getPathDown() == return paths(DOWN)
		post RESULT = paths(DOWN);
		
		public getPathLeft: () ==> bool
		getPathLeft() == return paths(LEFT)
		post RESULT = paths(LEFT);
		
		public getPathRight: () ==> bool
		getPathRight() == return paths(RIGHT)
		post RESULT = paths(RIGHT);
		
		-- Setters
		public setValue: int ==> ()
		setValue(v) == value := v
		pre v in set { 0, 1, 2 };
		
		public setCorner: bool ==> ()
		setCorner(b) == corner := b;
		
		public setPathUp: bool ==> ()
		setPathUp(p) == paths(UP) := p;
		
		public setPathDown: bool ==> ()
		setPathDown(p) == paths(DOWN) := p;
		
		public setPathLeft: bool ==> ()
		setPathLeft(p) == paths(LEFT) := p;
		
		public setPathRight: bool ==> ()
		setPathRight(p) == paths(RIGHT) := p;
end Space