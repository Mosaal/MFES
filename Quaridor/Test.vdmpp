class Test
	operations
		private assertTrue: bool ==> ()
		assertTrue(cond) == return
		pre cond;
		
		private testCreateSpace: int * int * int ==> ()
		testCreateSpace(v, r, c) == (
			dcl s: Space := new Space(v, r, c);
			assertTrue(s.getValue() = v);
			
			if r = 1 then assertTrue(s.getPathUp() = true) else assertTrue(s.getPathUp() = false);
			if r = 9 then assertTrue(s.getPathDown() = true) else assertTrue(s.getPathDown() = false);
			if c = 1 then assertTrue(s.getPathLeft() = true) else assertTrue(s.getPathLeft() = false);
			if c = 9 then assertTrue(s.getPathRight() = true) else assertTrue(s.getPathRight() = false);
		);
		
		private testCreatePlayer: int * int * int ==> ()
		testCreatePlayer(v, r, c) == (
			dcl p: Player := new Player(v, r, c);
			
			assertTrue(p.getRow() = r);
			assertTrue(p.getCol() = c);
			assertTrue(p.getValue() = v);
			assertTrue(p.getNumWalls() = 10);
			
			p.decNumWalls();
			assertTrue(p.getNumWalls() = 9);
		);
		
		private testBoardPlaceWall: () ==> ()
		testBoardPlaceWall() == (
			
			dcl b1: Board := new Board();		
			dcl b2: Board;
			
			--Limites do tabuleiro
			assertTrue( b1.placeWall(1,2,1) = false);
			assertTrue( b1.placeWall(9,2,2) = false);
			assertTrue( b1.placeWall(2,1,3) = false);
			assertTrue( b1.placeWall(2,9,4) = false);
			
			--Parede Vertical
			assertTrue( b1.placeWall(2,2,2) = true);
			b2 := new Board();
			assertTrue( b1.placeWall(2,2,2) = false);
			assertTrue( b2.placeWall(2,2,2) = true);
			b2 := new Board();
			assertTrue( b1.placeWall(1,2,2) = false);
			assertTrue( b2.placeWall(1,2,2) = true);
			b2 := new Board();
			assertTrue( b1.placeWall(4,2,1) = false);
			assertTrue( b2.placeWall(4,2,1) = true);
				
				--Parede a atrevessar
			assertTrue( b1.placeWall(1,2,4) = true);
			assertTrue( b1.placeWall(2,2,4) = false);
			assertTrue( b1.placeWall(3,2,4) = true);

			
			--Parede Horizontal
			b1 := new Board();
			assertTrue( b1.placeWall(2,2,4) = true);
			
			b2 := new Board();
			assertTrue( b1.placeWall(2,2,4) = false);
			assertTrue( b2.placeWall(2,2,4) = true);
			b2 := new Board();
			assertTrue( b1.placeWall(2,1,4) = false);
			assertTrue( b2.placeWall(2,1,4) = true);
			b2 := new Board();
			assertTrue( b1.placeWall(2,3,4) = false);
			assertTrue( b2.placeWall(2,3,4) = true);
			
				--Parede a atrevessar
			assertTrue( b1.placeWall(2,1,2) = true);
			assertTrue( b1.placeWall(2,2,2) = false);
			assertTrue( b1.placeWall(2,3,2) = true);
			
			
		);
		
		public static main: () ==> ()
		main() == (
			dcl test: Test := new Test();
		
			-- Space tests
			test.testCreateSpace(0, 1, 1);
			test.testCreateSpace(0, 1, 9);
			test.testCreateSpace(0, 9, 1);
			test.testCreateSpace(0, 9, 9);
			test.testCreateSpace(0, 4, 4);
			test.testCreateSpace(0, 1, 3);
			
			-- Player tests
			test.testCreatePlayer(1, 1, 1);
			test.testCreatePlayer(2, 1, 9);
			
			-- Board tests
			test.testBoardPlaceWall();
			
		);
end Test